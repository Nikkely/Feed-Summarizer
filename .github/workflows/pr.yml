name: Lint and Security Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  build_and_cache:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Cache Go modules
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: go-mod-

      - name: Build to populate cache
        run: go build ./...

  reviewdog:
    needs: build_and_cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-mod-${{ hashFiles('**/go.sum') }}

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Install reviewdog
        run: go install github.com/reviewdog/reviewdog/cmd/reviewdog@latest

      - name: Run golangci-lint with reviewdog
        run: |
          golangci-lint run --config .golangci.yml ./... \
            | reviewdog -f=golangci-lint \
              -name="golangci-lint" \
              -reporter=github-pr-review \
              -level=error \
              -fail-on-error 
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run govulncheck with reviewdog
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./... 2>&1 | reviewdog -efm="%f:%l:%c: %m" \
            -name="govulncheck" \
            -reporter=github-pr-review \
            -fail-on-error
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  unit_test:
    needs: build_and_cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-mod-${{ hashFiles('**/go.sum') }}

      - name: Run Tests
        run: make -f scripts/Makefile test
